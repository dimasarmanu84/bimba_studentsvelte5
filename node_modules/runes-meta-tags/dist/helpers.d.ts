/**
 * Deep merges two objects of the same type.
 *
 * @template T - The type of the objects to merge.
 * @param {T} target - The target object to merge into.
 * @param {Partial<T>} source - The source object to merge from.
 * @return {T} - The merged object.
 */
export declare function deepMerge<T extends object>(target: T, source: Partial<T>): T;
/**
 * Removes hyphens and capitalizes the first letter of each word in a given string.
 *
 * @param str - The input string to be processed.
 * @return The processed string with hyphens removed and the first letter of each word capitalized.
 */
export declare function removeHyphensAndCapitalize(str: string): string;
/**
 * Splits a string using '/' as the delimiter, removes hyphens from each word, and capitalizes the first letter of each word.
 *
 * @param text - The input string to be processed.
 * @return The processed string with hyphens removed and the first letter of each word capitalized.
 */
export declare function splitAndCapitalize(text: string): string;
/**
 * Generates a meta title by combining the capitalized and cleaned up pathname and the cleaned up name.
 *
 * @param pathname - The pathname to be processed.
 * @param name - The name to be processed.
 * @return The generated meta title.
 */
export declare function metaTitle(pathname: string, name: string): string;
export declare function metaDescription(pathname: string, baseDescription: string): string;
/**
 * Generates a meta image URL based on the provided pathname and site URL.
 *
 * @param pathname - The pathname to be processed.
 * @param siteUrl - The site URL to be used in the generated URL.
 * @param baseUrl - The base URL for the open graph service. Defaults to 'https://open-graph-vercel.vercel.app/api/'.
 * @return The generated meta image URL.
 */
export declare function metaImg(pathname: string, siteUrl: string, baseUrl?: string): string;
